class Node:
    def __init__(self,data):
        self.data = data
        self.left = None
        self.right = None
    
    
class BinaryTree:
    def __init__(self):
        self.root = None
        
    
    def preOrderIterative(self,root):
        if root is None:
            return []
        ans = []
        stack = [root]
        
        while stack:
            node = stack.pop()
            ans.append(node.data)
            
            if node.right:
                stack.append(node.right)
                
            if node.left:
                stack.append(node.left)
            
        return ans
        

if __name__ == '__main__':
    tree = BinaryTree()
    tree.root = Node(1)
    tree.root.left = Node(2)
    tree.root.right = Node(3)
    tree.root.left.left = Node(4)
    tree.root.left.right = Node(5)
    tree.root.right.left = Node(6)
    tree.root.right.right = Node(7)
    
    ans = tree.preOrderIterative(tree.root)
    print(ans)
    
    
    
        